from Crypto.Util.number import *
from Crypto.PublicKey import *
import gmpy2
import math


p = getPrime(512)
q = getPrime(512)
n=78347218359895112612527330392462838816685153926438234460008564879287934099740525171692837588691652824330258439850835089613960568963729557421351504589670237070498380878328173598628479673760759245426776808027259806838308532577200376687171827063088040812176470947724945757880997247708996006312216810169142797863
e = 65537
p=math.log(6880708450599371130881015483507826787473680076823032569270417667717239477090820870542986324502779942815310635179294993534188765837026026390548488142312212778954030220677093623791371078157360453483981512843719171331554460155977915006608156022020450468408330529492298718541370734011260051065358100350831838803,2)+3735928559
print(p)
q=n/p;
phin =(p-1)*(q-1)
d=inverse(e,phin)
ciphertext="1756db2ddea6cebfcab38b8088af5ffa7430f0197acfdb63f5c10d56b4ce3d47957702d288b9a7fd7a8ae510dd8e911b58517ffd6ff657deb4b0d218bdd3db2212c5c706e922310012dd653108d0e387de4d9f66e1fcbd9043d343186b9f81c9779f76a7a4f0c92a52f766f267c3629aa4c4b19c70eb113e9355b70eedb8d6a4"
ciphertext = ciphertext.decode("hex")
ciphertext = bytes_to_long(ciphertext)
message = pow(ciphertext, d, n)
print(long_to_bytes(message))




